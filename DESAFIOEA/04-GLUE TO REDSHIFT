from io import StringIO
import io
import csv
import datetime
import logging
import pandas as pd
import boto3
from boto3.session import Session

from pgdb import connect




aws_access_key_id='acesskeyid'
aws_secret_access_key='secretacesskey'
region_name='sa-east-1'

session = Session(aws_access_key_id=aws_access_key_id, aws_secret_access_key=aws_secret_access_key)
s3 = session.resource('s3')

bucket_conn = s3.Bucket('hackaton-microdados-rais')
client = boto3.client('s3', aws_access_key_id=aws_access_key_id, aws_secret_access_key=aws_secret_access_key)

#jdbc:<connection-redshifti>

## PARAMETROS DE CONEX√ÉO REDSHIFT

hostname = 'hostname'
username = 'username'
password = 'Password'
database = 'DBNAME'

table = 'public'+ '.' + 'hackanois_2010'

def upload_redshift(s3_path):
    
    credentials = '\'aws_access_key_id=myacesskeyid;aws_secret_access_key=mysecretacesskey''
    delimiter = 'delimiter \',\''
    header = 'ignoreheader 1'
    accept = 'acceptinvchars as \'?\''
    conn = connect(host=hostname, user=username, password=password, database=database, port=5439)
    query = 'copy ' + table + ' from ' + s3_path + ' credentials ' + credentials + ' ' + delimiter + ' ' + accept + ' ' + header + ' emptyasnull blanksasnull removequotes escape;'
    dbcursor = conn.cursor()
    dbcursor.execute(query)
    conn.commit()
    dbcursor.close()
    
    




for s3_file in bucket_conn.objects.filter(Prefix='extract/2010/AC2010.csv'):
    print(s3_file.key)
    
    s3_path = '\'s3://hackaton-microdados-rais/'+ s3_file.key + '\''
    print(s3_path)
    upload_redshift(s3_path)
    #obj = client.get_object(Bucket='hackaton-microdados-rais', Key=s3_file.key)
    
    #print("OI")
    #df = pd.read_csv(obj['Body'], encoding='ISO-8859-1', sep=";")
    #df = pd.read_csv('s3://hackaton-microdados-rais/extract/'+s3_file.key)
    #print(df.head(5))
    #df_file = client.get_object(Bucket='hackaton-microdados-rais', Key = s3_file.key)
    #text = df_file.read().decode("ISO-8859-1")
    #content = io.StringIO(text).getvalue()
    #df = pd.read_csv(io.StringIO(content), delimiter=";", low_memory=False)
    #df.head(5)
